[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[project]
name = "anpe"
version = "1.0.0"
authors = [
    {name = "Richard Chen", email = "rcverse6@gmail.com"},
]
description = "Accurately extract complete noun phrases with customisation and strctural output."
readme = "README.md"
requires-python = ">=3.9,<3.13"
license = {text = "MIT"}
keywords = ["nlp", "parsing", "noun phrase extraction", "noun phrases", "linguistics", "text processing", "natural language processing"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Topic :: Text Processing :: Linguistic",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Natural Language :: English",
]
dependencies = [
    "spacy>=3.5.0",
    "benepar>=0.2.0",
    "nltk>=3.8.0",
]

[project.urls]
Homepage = "https://github.com/rcverse/another-noun-phrase-extractor"
Documentation = "https://github.com/rcverse/another-noun-phrase-extractor"
"Bug Tracker" = "https://github.com/rcverse/another-noun-phrase-extractor/issues"
"Source Code" = "https://github.com/rcverse/another-noun-phrase-extractor"

[project.scripts]
anpe = "anpe.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["anpe"]

[tool.hatch.build.targets.sdist]
include = [
    "anpe",
    "README.md",
    "LICENSE",
    "MANIFEST.in",
]

# Add pytest configuration section
[tool.pytest.ini_options]
markers = [
    "e2e: marks tests as end-to-end (potentially slow, requires models)",
]
addopts = [
    "--import-mode=importlib",
]
testpaths = [
    "tests", # Corrected path
]
# You might add other options here later, like log levels, etc.

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/__main__.py",
]
